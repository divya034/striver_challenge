class Solution {

public:
    bool isv(char c){
        char v = tolower(c);
        return v == 'a' || v == 'e' ||v == 'i' ||v == 'o' ||v == 'u';
    }
    string reverseVowels(string s) {
        int low = 0;
        int high = s.size() - 1;

        while(low < high){ //each case runs once because then again we need to check if low < high
            if(isv(s[low]) && isv(s[high])){  // both are vovwel
               swap(s[low], s[high]);
                low++;
                high--;
            }

            // In the context of your code, the condition isv(s[low] == 0) checks if the ASCII value of s[low] is equal to 0, which is not the intended behavior. The isv function is designed to check if a character is a vowel by comparing it with specific vowel characters, not by comparing its ASCII value with 0.

            else if(!isv(s[low])){
                low++; //not a vowel
            }
            else{  
                high--; //not a vowel
            }
        }

        return s;
    }
};
