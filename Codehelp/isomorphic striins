class Solution {
public:
    bool isIsomorphic(string s, string t) {
        int hash[255]= {0};
        bool isttaken[255] = {0};

        for(int i = 0; i<s.size(); i++){
          if(hash[s[i]] == 0 && isttaken[t[i]] == 0)  
            hash[s[i]] = t[i];
            isttaken[t[i]] = true;
        }

        for(int i = 0; i<s.size(); i++){
            if(hash[s[i]] != t[i]){
                return false;
            }
        }

        return true;
    }
};


explaination

class Solution {
public:
    bool isIsomorphic(string s, string t) {
        int hash[255]= {0};
        bool isttaken[255] = {0};

       for(int i = 0; i<s.size(); ++i){
           if(hash[s[i]] == 0 && isttaken[t[i]] == 0){
               hash[s[i]] = t[i];
               isttaken[t[i]] = 1;
           }
       }

    //all values in s are mapped to a correcspondng chars in T


// "badc"    "baba"  in baba all b and a ae maped but d and c are not so ASN = FALSE
    //    for(int i = 0; i< t.size(); i++){
    //        if(isttaken[t[i]] != 1){
    //            return false;
    //        }
    //    }



// SO AFTER MAPPING, 
// JUST CHECK IF WE COULD MAP EVRYTHING DISTINT IN s to everything distinct in T
        for(int i = 0; i<s.size(); i++){
            if(hash[s[i]] != t[i]){
                return false;
            }
        }
       return true;
    }
};
